{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 OverView: It is a small project that using servlet to generate a xml string to answer the requests from clients.\
\
 0.Dependencies\
  1.Software: MySQL, JDK, Tomcat and Eclipse before compiling the application. In my environment, I use the latest version of the above softwares.\
  2.Building the application with liararies of commons-fileupload-1.3.3.jar, javacsv.jar,mysql-connector-java-5.1.45.jar.\
  3.Coding with java, jsp, xml, javascript, sql.\
\
1.Compile&Build\
  a. Import the application to Eclipse after unzip the source code folder.\
  b. You must create a database called \'93LIBRARY\'94 using MySQL and modify the username and password of your MySQL in the \'93db.properties\'94 file of the source code.\
  c. Click on the \'93Run As\'94 button to compile and build the application as the dynamic web application.\
  d.If you configure the Runtime server, you could test the application in the simulation environment.\
\
2.Install\
  a. Copy all files under the \'93WebContent\'94 of your compiled application in the Eclipse workspace to the folder you created (any name) in the Tomcat application\'92s \'93webapps\'94 folder.\
  b. Start your Tomcat server by executing the startup.sh in the Tomcat application (You can use the \'93find\'94 command to locate the script).\
  c. Use your browser to visit the web you have published by the web address: localhost:8080/foldername\
  d. You have installed the application and are allowed to use it now.\
}
